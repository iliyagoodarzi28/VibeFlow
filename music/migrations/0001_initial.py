# Generated by Django 5.2 on 2025-05-04 06:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Artist Name')),
                ('bio', models.TextField(blank=True, verbose_name='Biography')),
                ('image', models.ImageField(blank=True, null=True, upload_to='artists/', verbose_name='Artist Image')),
                ('debut_date', models.DateField(blank=True, null=True, verbose_name='Debut Date')),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Genre Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
            },
        ),
        migrations.CreateModel(
            name='ArtistCollaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Collaboration Title')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Release Date')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('artists', models.ManyToManyField(related_name='collaborations', to='music.artist', verbose_name='Artists')),
            ],
            options={
                'verbose_name': 'Artist Collaboration',
                'verbose_name_plural': 'Artist Collaborations',
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Release Date')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='albums/', verbose_name='Album Cover')),
                ('rating', models.FloatField(blank=True, null=True, verbose_name='Album Rating')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='albums', to='music.artist', verbose_name='Artist')),
                ('genres', models.ManyToManyField(blank=True, related_name='albums', to='music.genre', verbose_name='Genres')),
            ],
            options={
                'verbose_name': 'Album',
                'verbose_name_plural': 'Albums',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Release Date')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Duration')),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='songs/', verbose_name='Audio File')),
                ('text', models.TextField(blank=True, help_text='Lyrics or description of the song', verbose_name='Lyrics/Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='songs/', verbose_name='Song Image')),
                ('rating', models.FloatField(blank=True, null=True, verbose_name='Song Rating')),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='songs', to='music.album', verbose_name='Album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='music.artist', verbose_name='Artist')),
                ('genres', models.ManyToManyField(blank=True, related_name='songs', to='music.genre', verbose_name='Genres')),
            ],
            options={
                'verbose_name': 'Song',
                'verbose_name_plural': 'Songs',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Release Date')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_public', models.BooleanField(default=False, verbose_name='Is Public')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('songs', models.ManyToManyField(blank=True, related_name='playlists', to='music.song', verbose_name='Songs')),
            ],
            options={
                'verbose_name': 'Playlist',
                'verbose_name_plural': 'Playlists',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ListeningHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listened_at', models.DateTimeField(auto_now_add=True, verbose_name='Listened At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listening_history', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.song', verbose_name='Song')),
            ],
            options={
                'verbose_name': 'Listening History',
                'verbose_name_plural': 'Listening Histories',
                'ordering': ['-listened_at'],
            },
        ),
        migrations.CreateModel(
            name='SongComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Comment Text')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='music.song', verbose_name='Song')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='song_comments', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Song Comment',
                'verbose_name_plural': 'Song Comments',
            },
        ),
        migrations.CreateModel(
            name='SongView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='music.song', verbose_name='Song')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='song_views', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Song View',
                'verbose_name_plural': 'Song Views',
            },
        ),
        migrations.CreateModel(
            name='SongLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='music.song', verbose_name='Song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_likes', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Song Like',
                'verbose_name_plural': 'Song Likes',
                'unique_together': {('song', 'user')},
            },
        ),
    ]
